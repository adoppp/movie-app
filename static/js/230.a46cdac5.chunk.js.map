{"version":3,"file":"static/js/230.a46cdac5.chunk.js","mappings":"8LAEMA,EAAQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OAAO,yBAAMC,EAAAA,OAAAA,QACT,QADS,UAEND,GACH,OAGP,C,2GCJKE,EAAKC,IAAAA,KCJX,CAAgB,gBAAkB,8BAA8B,uBAAuB,mCAAmC,WAAa,2BDMjIC,EAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACLC,GAAWC,EAAAA,EAAAA,MAEXC,EAAOH,EAAMI,KAAI,SAAAC,GAAI,OACvB,eAAkBC,UAAWT,EAAG,wBAAhC,UACI,UAAC,KAAD,CAAMU,GAAE,kBAAaF,EAAKG,IAAMC,MAAO,CAAEC,KAAMT,GAA/C,WACI,gBAAKU,IAAG,yCAAoCN,EAAKO,aAAeC,IAAKR,EAAKS,SAC1E,gBAAKR,UAAWT,EAAG,cAAnB,UACI,wBAAKQ,EAAKS,cAJbT,EAAKG,GADS,IAW3B,OAAO,eAAIF,UAAWT,EAAG,mBAAlB,SAAuCM,GACjD,C,mLEdKN,EAAKC,IAAAA,KCPX,CAAgB,KAAO,0BDSjBiB,EAAY,WACd,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACI,kBAAMC,SAZW,SAACC,GAGlB,GAFAA,EAAKC,iBAES,KAAVN,EACD,OAAOO,IAAAA,OAAAA,QAAwB,uBAGlCC,QAAQC,IAAIT,GACZE,GAASQ,EAAAA,EAAAA,IAAWV,GACvB,EAGiCX,UAAWT,EAAG,QAA5C,WACI,kBACI+B,KAAK,OACLC,KAAK,SACLC,MAAOb,EACPc,SArBS,SAACD,GAClBZ,EAASY,EAAME,OAAOF,MAAMG,OAAOC,cACtC,EAoBWC,YAAY,WAEhB,mBAAQP,KAAK,SAAb,SAAsB,wBAGjC,E,oBE9BK/B,EAAKC,IAAAA,KCVX,CAAgB,UAAY,0BAA0B,QAAU,0BDgChE,EApBe,WACX,IAAME,GAAQoC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAE1B,OACI,qBAASnC,UAAWT,EAAG,WAAvB,WACI,SAACkB,EAAD,IAEAf,EAAM0C,OAAS,IAEX,gBAAKpC,UAAWT,EAAG,aAAnB,SACSyC,GAAY,SAACK,EAAA,EAAD,KAAa,SAAC5C,EAAA,EAAD,CAAMC,MAAOA,MAGlDwC,IAAU,SAAC9C,EAAA,EAAD,CAAOC,QAAS6C,MAGtC,C,+KE/BM,IAAMI,EAAe,SAAAnC,GAAK,OAAIA,EAAMoC,aAAaC,KAAvB,EAEpBT,EAAgB,SAAA5B,GAAK,OAAIA,EAAMoC,aAAa5B,KAAvB,EAErBsB,EAAiB,SAAA9B,GAAK,OAAIA,EAAMoC,aAAaP,SAAvB,EAEtBG,EAAgB,SAAAhC,GAAK,OAAIA,EAAMoC,aAAaL,KAAvB,EAErBO,EAAkB,SAAAtC,GAAK,OAAIA,EAAMoC,aAAaG,YAAvB,EAEvBC,EAAiB,SAAAxC,GAAK,OAAIA,EAAMoC,aAAaK,MAAvB,C","sources":["components/Error/Error.jsx","components/List/List.jsx","webpack://react-homework-template/./src/components/List/List.module.scss?5111","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.scss?25b4","components/pages/Search/Search.jsx","webpack://react-homework-template/./src/components/pages/Search/Search.module.scss?2acb","redux/selectors/selectors.js"],"sourcesContent":["import { Report } from \"notiflix\"\n\nconst Error = ({message}) => {\n    return <div>{Report.failure(\n        'Error',\n        `${message}`,\n        'Ok'\n        )}\n    </div>\n}\n\nexport { Error }","import classNames from 'classnames/bind';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './List.module.scss';\n\nconst cn = classNames.bind(styles);\n\nconst List = ({films}) => {\n    const location = useLocation();\n\n    const item = films.map(film =>\n        <li key={film.id} className={cn('container__list-item')}>\n            <Link to={`/search/${film.id}`} state={{ from: location }} >\n                <img src={`https://image.tmdb.org/t/p/w300${film.poster_path}`} alt={film.title} />\n                <div className={cn('background')}>\n                    <h2>{film.title}</h2>\n                </div>\n            </Link>\n        </li>\n    );\n\n    return <ul className={cn('container__list')}>{item}</ul>\n};\n\nexport { List };","// extracted by mini-css-extract-plugin\nexport default {\"container__list\":\"List_container__list__KIKDS\",\"container__list-item\":\"List_container__list-item__ChXA0\",\"background\":\"List_background__MvdEq\"};","import Notiflix from \"notiflix\";\nimport { useDispatch } from \"react-redux\";\nimport { getByQuery } from \"redux/operations/filmsThunk\";\nimport { useState } from \"react\";\nimport classNames from \"classnames/bind\";\n\nimport styles from './SearchBar.module.scss';\n\nconst cn = classNames.bind(styles);\n\nconst SearchBar = () => {\n    const [query, setQuery] = useState('');\n    const dispatch = useDispatch();\n\n    const handleChange = (value) => {\n        setQuery(value.target.value.trim().toLowerCase());\n    }\n\n    const handleSumbit = (form) => {\n        form.preventDefault();\n\n        if (query === '') {\n           return Notiflix.Notify.warning('Enter a movie name!')\n        }\n        \n        console.log(query)\n        dispatch(getByQuery(query))\n    }\n\n    return (\n        <form onSubmit={handleSumbit} className={cn('form')}>\n            <input\n                type=\"text\"\n                name=\"search\"\n                value={query}\n                onChange={handleChange}\n                placeholder=\"movie\"\n            />\n            <button type=\"Sumbit\">Search!(make svg)</button>\n        </form>\n    )\n}\n\nexport { SearchBar };","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__7vkG8\"};","import { useSelector } from \"react-redux\";\nimport { errorSelector, loaderSelector, querySelector } from \"redux/selectors/selectors\";\nimport classNames from \"classnames/bind\";\n\nimport styles from './Search.module.scss';\n\nimport { List } from \"components/List/List\";\nimport { SearchBar } from \"components/SearchBar\";\nimport { Loader } from \"components/Loader\";\nimport { Error } from \"components/Error\";\n\nconst cn = classNames.bind(styles);\n\nconst Search = () => {\n    const films = useSelector(querySelector);\n    const isLoading = useSelector(loaderSelector)\n    const error = useSelector(errorSelector)\n\n    return (\n        <section className={cn('section')}>\n            <SearchBar />\n            {\n            films.length > 0\n                &&\n                <div className={cn('container')}>\n                        {isLoading ? <Loader /> : <List films={films} />}\n                </div>\n            }\n            {error && (<Error message={error} />)}\n        </section>\n    )\n}\n\nexport default Search;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__ZioKX\",\"section\":\"Search_section__KfbAb\"};","export const filmSelector = state => state.filmsReducer.items;\n\nexport const querySelector = state => state.filmsReducer.query;\n\nexport const loaderSelector = state => state.filmsReducer.isLoading;\n\nexport const errorSelector = state => state.filmsReducer.error;\n\nexport const detailsSelector = state => state.filmsReducer.movieDetails;\n\nexport const actorsSelector = state => state.filmsReducer.actors;"],"names":["Error","message","Report","cn","classNames","List","films","location","useLocation","item","map","film","className","to","id","state","from","src","poster_path","alt","title","SearchBar","useState","query","setQuery","dispatch","useDispatch","onSubmit","form","preventDefault","Notiflix","console","log","getByQuery","type","name","value","onChange","target","trim","toLowerCase","placeholder","useSelector","querySelector","isLoading","loaderSelector","error","errorSelector","length","Loader","filmSelector","filmsReducer","items","detailsSelector","movieDetails","actorsSelector","actors"],"sourceRoot":""}